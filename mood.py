# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xoZyShuknYco2_Z6t_BxU86u83drA1AZ
"""

import pandas as pd
from sklearn.preprocessing import LabelEncoder
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split

# Step 1
data = {
    "Q1": ["Energetic", "Tired", "Anxious", "Calm", "Energetic", "Lazy", "Stressful", "Fun", "Tired", "Calm"],
    "Q2": ["Productive", "Lazy", "Stressful", "Fun", "Stressful", "Lazy", "Productive", "Fun", "Lazy", "Productive"],
    "Q3": ["Laughing", "Sleeping", "Working", "Talking to someone", "Working", "Sleeping", "Talking to someone", "Laughing", "Sleeping", "Working"],
    "Mood": ["happy", "bored", "stressed", "tired", "stressed", "bored", "tired", "happy", "bored", "stressed"]
}

df = pd.DataFrame(data)

# Step 2
q1_options = ["Energetic", "Tired", "Anxious", "Calm", "Lazy", "Stressful", "Fun"]
q2_options = ["Productive", "Lazy", "Stressful", "Fun"]
q3_options = ["Laughing", "Sleeping", "Working", "Talking to someone"]
mood_options = ["happy", "bored", "stressed", "tired"]

le_q1 = LabelEncoder().fit(q1_options)
le_q2 = LabelEncoder().fit(q2_options)
le_q3 = LabelEncoder().fit(q3_options)
le_mood = LabelEncoder().fit(mood_options)

df["Q1_enc"] = le_q1.transform(df["Q1"])
df["Q2_enc"] = le_q2.transform(df["Q2"])
df["Q3_enc"] = le_q3.transform(df["Q3"])
df["Mood_enc"] = le_mood.transform(df["Mood"])

# Step 3
X = df[["Q1_enc", "Q2_enc", "Q3_enc"]]
y = df["Mood_enc"]
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

lr_model = LogisticRegression()
lr_model.fit(X_train, y_train)

# Step 4
def predict_mood(ans1, ans2, ans3):
    try:
        encoded = [
            le_q1.transform([ans1])[0],
            le_q2.transform([ans2])[0],
            le_q3.transform([ans3])[0]
        ]
        pred = lr_model.predict([encoded])[0]
        mood_label = le_mood.inverse_transform([pred])[0]
        return f"\nYour predicted mood is: {mood_label.upper()}"
    except Exception as e:
        return f"\nError: {str(e)}"


# Step 5
print("üçí Cherry's Mood Analyzer (Offline CLI Version)\n")

print("Q1: How are you feeling right now?")
print("Options:", q1_options)
ans1 = input("Enter your choice: ").strip().capitalize()

print("\nQ2: What kind of day did you have?")
print("Options:", q2_options)
ans2 = input("Enter your choice: ").strip().capitalize()

print("\nQ3: What do you feel like doing?")
print("Options:", q3_options)
ans3 = input("Enter your choice: ").strip().capitalize()

print(predict_mood(ans1, ans2, ans3))